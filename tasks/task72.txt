TASK
Get the history for Uolevi's account balance.
Transactions are in order by their id.

STRICT

TABLES
CREATE TABLE Accounts (id INTEGER PRIMARY KEY, owner TEXT);
CREATE TABLE Transactions (id INTEGER PRIMARY KEY, account_id INTEGER, change INTEGER);

TEST
INSERT INTO Accounts (owner) VALUES ('Uolevi');
INSERT INTO Accounts (owner) VALUES ('Maija');
INSERT INTO Accounts (owner) VALUES ('Kaaleppi');
INSERT INTO Transactions (account_id,change) VALUES (1,500);
INSERT INTO Transactions (account_id,change) VALUES (2,300);
INSERT INTO Transactions (account_id,change) VALUES (1,-100);
INSERT INTO Transactions (account_id,change) VALUES (2,100);
INSERT INTO Transactions (account_id,change) VALUES (2,-300);

RESULT
500
400

TEST
INSERT INTO Accounts (owner) VALUES ('Uolevi');
INSERT INTO Accounts (owner) VALUES ('Maija');
INSERT INTO Accounts (owner) VALUES ('Kaaleppi');
INSERT INTO Transactions (account_id,change) VALUES (1,100);
INSERT INTO Transactions (account_id,change) VALUES (1,200);
INSERT INTO Transactions (account_id,change) VALUES (1,300);
INSERT INTO Transactions (account_id,change) VALUES (1,400);
INSERT INTO Transactions (account_id,change) VALUES (1,-500);

RESULT
100
300
600
1000
500

TEST
INSERT INTO Accounts (owner) VALUES ('Maija');
INSERT INTO Accounts (owner) VALUES ('Uolevi');
INSERT INTO Transactions (account_id,change) VALUES (1,100);
INSERT INTO Transactions (account_id,change) VALUES (2,200);

RESULT
200

TEST
INSERT INTO Accounts (owner) VALUES ('Uolevi');
INSERT INTO Transactions (account_id,change) VALUES (1,100);
INSERT INTO Transactions (account_id,change) VALUES (1,100);
INSERT INTO Transactions (account_id,change) VALUES (1,-50);
INSERT INTO Transactions (account_id,change) VALUES (1,100);
INSERT INTO Transactions (account_id,change) VALUES (1,-50);
INSERT INTO Transactions (account_id,change) VALUES (1,100);
INSERT INTO Transactions (account_id,change) VALUES (1,-50);

RESULT
100
200
150
250
200
300
250
